"""
Django settings for acc_eodc project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os.path
from pathlib import Path
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


is_local = True
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
if is_local:
    SECRET_KEY = 'django-insecure-)c_)%ppda)+iz^_kyp#r+$akx^zt++uo7a%*9da#+_^)x!&9_c'
else:
    SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
if is_local:
    DEBUG = True
else:
    DEBUG = os.environ.get("DEBUG","False").lower() == "true"

if is_local:
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(" ")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users.apps.UsersConfig',
    'wkhtmltopdf',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',

]

CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 0
CACHE_MIDDLEWARE_KEY_PREFIX = ''

ROOT_URLCONF = 'acc_eodc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'acc_eodc.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'acc_eodc',
        'USER':'postgres',
        'PASSWORD':'1234',
        'HOST':'localhost',
        'PORT': '5432',
    }
}

if not is_local:
    database_url = os.environ.get("DATABASE_URL")
    DATABASES["default"]= dj_database_url.parse(database_url)
#DATABASES["default"]=dj_database_url.parse("postgres://acc_eodc_user:oOtZY2QsmnyONWBLQfPDaA1pNsyHugqe@dpg-cjkgugdk5scs73dqmdd0-a.singapore-postgres.render.com/acc_eodc")

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'users/static')]

# location where collectstatic will copy the static files
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

#LOGIN_URL = 'login'
#LOGIN_REDIRECT_URL = 'home'  # Change this to the URL for home

DATE_FORMAT = "d-m-Y"

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# SMTP settings
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT=587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

if is_local:
    EMAIL_HOST_USER = 'bhanuprakashnaidu13579@gmail.com'
    EMAIL_HOST_PASSWORD = 'grwfoxfjhzgcscgk' #dummy password
else:
    EMAIL_HOST_USER = os.environ.get("sender_email")
    EMAIL_HOST_PASSWORD = os.environ.get("sender_email_pwd")


# If DEBUG is True, Django will serve static files during development
if DEBUG:
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

if is_local:
    #office_mail_id = 'eodcacc@gmail.com'
    deputy_cmsnr = 'Megha Gupta'
    epcg_time_gap = 2555
    letter_time_gap = 30
    ph1_time_gap = 30
    ph2_time_gap = 30
    oio_time_gap = 30

    decc_time_gap = 730

    office_mail_id = 'bellamkondadileep125@gmail.com'

else:
    deputy_cmsnr = os.environ.get("deputy_cmsnr")
    epcg_time_gap = os.environ.get("epcg_time_gap",2555)
    letter_time_gap = os.environ.get("letter_time_gap",30)
    ph1_time_gap = os.environ.get("ph1_time_gap",30)
    ph2_time_gap = os.environ.get("ph2_time_gap",30)
    oio_time_gap = os.environ.get("oio_time_gap",30)

    decc_time_gap = os.environ.get("decc_time_gap",730)

    office_mail_id = os.environ.get("office_mail_id")